project(vmnative LANGUAGES C)

set (WAMR_BUILD_PLATFORM "linux")
set (WAMR_BUILD_TARGET "X86_64")

set (WAMR_BUILD_INTERP 1)
set (WAMR_BUILD_FAST_INTERP 1)
set (WAMR_BUILD_AOT 0)

set (WAMR_BUILD_GLOBAL_HEAP_POOL 0)
set (WAMR_BUILD_ALLOC_WITH_USAGE 1)
set (WAMR_BUILD_ALLOC_WITH_USER_DATA 1)

# set (WAMR_BUILD_GLOBAL_HEAP_POOL 1)
# set (WAMR_BUILD_ALLOC_WITH_USAGE 0)
# set (WAMR_BUILD_ALLOC_WITH_USER_DATA 0)
# set (WAMR_BUILD_GLOBAL_HEAP_SIZE 10485760) # 10M

set (WAMR_BUILD_LIBC_BUILTIN 0)
set (WAMR_BUILD_LIBC_WASI 0)
set (WAMR_BUILD_LIBC_UVWASI 0)

set (WAMR_BUILD_REF_TYPES 1) # Prevent wamr error for wasi

# set (WAMR_DISABLE_APP_ENTRY 1)
# set (WAMR_BUILD_SIMD 0)
# set (WAMR_BUILD_AOT_INTRINSICS 0)
# set (WAMR_BUILD_LIB_PTHREAD 0)
# set (WAMR_BUILD_TAIL_CALL 0)
# set (WAMR_DISABLE_HW_BOUND_CHECK 0)
# set (WAMR_DISABLE_STACK_HW_BOUND_CHECK 0)

include (${CMAKE_SOURCE_DIR}/externals/wamr/build-scripts/runtime_lib.cmake)

include_directories(${CMAKE_SOURCE_DIR}/nulib)
include_directories(${CMAKE_SOURCE_DIR}/externals)

file(GLOB CORE_SOURCES core/*.c)
file(GLOB RUNTIME_SOURCES *.c)
add_library(${PROJECT_NAME} ${CORE_SOURCES} ${RUNTIME_SOURCES} ${WAMR_RUNTIME_LIB_SOURCE})

set(OpenGL_GL_PREFERENCE GLVND)
find_package(OpenGL REQUIRED)
if (UNIX)
    target_link_libraries(${PROJECT_NAME} ${OPENGL_LIBRARIES} Xrandr X11 dl pthread m)
endif (UNIX)
if (WIN32)
    target_link_libraries(${PROJECT_NAME} ${OPENGL_LIBRARIES} m)
endif (WIN32)
