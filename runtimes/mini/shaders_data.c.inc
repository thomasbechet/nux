#include <nulib/nulib.h>
static const nu_sv_t shader_screen_blit_frag = NU_SV(
    "#version 330 core\n"
    "\n"
    "out vec4 out_color;\n"
    "in vec2 uv;\n"
    "\n"
    "uniform sampler2D t_surface;\n"
    "\n"
    "vec2 uv_filtering(in vec2 uv, in vec2 texture_size)\n"
    "{\n"
    "    vec2 pixel = uv * texture_size;\n"
    "    vec2 seam = floor(pixel + 0.5);\n"
    "    vec2 dudv = fwidth(pixel);\n"
    "    vec2 rel = (pixel - seam) / dudv;\n"
    "    vec2 mid_pix = vec2(0.5);\n"
    "    pixel = seam + clamp(rel, -mid_pix, mid_pix);\n"
    "    return pixel / texture_size;\n"
    "}\n"
    "\n"
    "void main()\n"
    "{\n"
    "    vec2 filtered_uv = uv_filtering(uv, textureSize(t_surface, 0));\n"
    "    out_color = texture(t_surface, filtered_uv);\n"
    "}\n");
static const nu_sv_t shader_screen_blit_vert = NU_SV(
    "#version 330 core\n"
    "\n"
    "out vec2 uv;\n"
    "\n"
    "void main()\n"
    "{\n"
    "    float x = float((gl_VertexID & 1) << 2);\n"
    "    float y = float((gl_VertexID & 2) << 1);\n"
    "\n"
    "    uv.x = x * 0.5;\n"
    "    uv.y = y * 0.5;\n"
    "\n"
    "    gl_Position = vec4(x - 1.0, y - 1.0, 0.0, 1.0);\n"
    "}\n");
