#include "internal.h"
#include "nux_api.h"
#include <wasm3.h>
{% set sigmap = {
    "nux_status_t": "v",
    "nux_u32_t": "i",
    "nux_i32_t": "i",
    "nux_u32_t": "i",
    "nux_f32_t": "f",
} %}
{% for function in functions %}
static m3ApiRawFunction({{ function.name }})
{
#ifdef NUX_BUILD_TRACE
    printf("TRACE {{ function.name }}\n");
#endif
    nux_env_t env = m3_GetUserData(runtime);
    {{ "m3ApiReturnType({0});".format(function.returntype) if function.returntype != "void" else "" }}
    {%- for arg in function.args -%}
        {{ "m3ApiGetArgMem" if arg.isptr else "m3ApiGetArg" }}({{ "const " if arg.isconst else "" }}{{ arg.typename }}{{ "*" if arg.isptr else "" }}, {{ arg.name }});
    {%- endfor -%}

    {{ "m3ApiReturn(" if function.returntype != "void" else "" }}nux_{{ function.name }}(env
        {%- for arg in function.args -%}
            {{ ", "}}{{ arg.name }}
        {%- endfor -%}
    ){{ ")" if function.returntype != "void" else "" }};
    m3ApiSuccess();
}
{%- endfor %}

static void link_raw_functions(IM3Module module)
{
    {% for function in functions -%}
    m3_LinkRawFunction(module, "*", "{{ function.name }}", "{{ sigmap[function.returntype] if function.returntype != "void" else "v" }}(
        {%- for arg in function.args -%}
            {{ sigmap.get(arg.typename, "i") if not arg.isptr else "*" }}
        {%- endfor -%})", {{ function.name }});
    {% endfor -%}
}
