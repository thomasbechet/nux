#ifndef NUX_H
#define NUX_H

#ifdef __cplusplus
extern "C"
{
#endif

//////////////////////////////////////////////////////////////////////////
//////                          Core Types                          //////
//////////////////////////////////////////////////////////////////////////

#include <stdint.h>

typedef int32_t  i32;
typedef uint32_t u32;
typedef int64_t  i64;
typedef uint64_t u64;
typedef float    f32;
typedef double   f64;

//////////////////////////////////////////////////////////////////////////
//////                        Export Macros                         //////
//////////////////////////////////////////////////////////////////////////

#if (defined(__WIN32__) || defined(WIN32) || defined(__MINGW32__) \
     || defined(_WIN32))
#define WASM_EXPORT(name) __declspec(dllexport)
#define WASM_IMPORT(name)
#elif defined(__linux__) || defined(__unix__) || defined(__linux)
#define WASM_EXPORT(name) __attribute__((visibility("default")))
#define WASM_IMPORT(name)
#elif defined(__APPLE__)
#define WASM_EXPORT(name)
#define WASM_IMPORT(name)
#elif defined(_POSIX_VERSION)
#define WASM_EXPORT(name)
#define WASM_IMPORT(name)
#else
#define WASM_EXPORT(name)
#define WASM_IMPORT(name)
#endif
#
//////////////////////////////////////////////////////////////////////////
//////                          CALLBACKS                           //////
//////////////////////////////////////////////////////////////////////////

WASM_EXPORT("start")
void start();
WASM_EXPORT("update")
void update();

//////////////////////////////////////////////////////////////////////////
//////                            ENUMS                             //////
//////////////////////////////////////////////////////////////////////////
{% set typemap = {
    "void": "void",
    "nux_c8_t": "void",
    "nux_u32_t": "u32",
    "nux_f32_t": "f32",
    "nux_id_t": "u32",
    "nux_status_t": "void"
} %}
{% for enum in enums %}
typedef enum {
    {%- for val in enum.values %}
        {{ val.name }} = {{ val.value }}{{ ", " if not loop.last else "" }}
    {%- endfor %}
} {{ enum.name }};
{% endfor %}
//////////////////////////////////////////////////////////////////////////
//////                           SYSCALL                            //////
//////////////////////////////////////////////////////////////////////////
{% for function in functions %}
WASM_EXPORT("{{ function.name }}")
{{ typemap[function.returntype] }} {{ function.name }}(
    {%- for arg in function.args -%}
        {{ "const " if arg.isconst else "" }}{{ 
            typemap.get(arg.typename, "u32") }}{{ 
            " *" if arg.isptr else " " }}{{ 
            arg.name }}{{ 
            ", " if not loop.last else "" }}
    {%- endfor -%}
);
{%- endfor %}

#ifdef __cplusplus
}
#endif

#endif
